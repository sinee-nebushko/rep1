sp = [["*", "*", "*", ],
      ["*", "*", "*", ],
      ["*", "*", "*", ]]


def pole():
    for p in sp:
        print(p[0], p[1], p[2])
        # Это поле, после несколький корявых полей, Вике просто стало грустненько
        #  примерно поэтому тут нет палочек, только ячейки со звёздочками.


def krest():  # Всё про крестики
    print("Ходят Х ")  # Объявляем ход
    x = int(input('Введите строку:  '))  # Просим координаты для Х
    y = int(input('Введите столбец:  '))

    if x < 1 or x > 3 or y < 1 or y > 3 or sp[x - 1][y - 1] != '*':  # Проверяем способность игрока попасть в поле 3/3
        print('Данная ячейка занята или не существует.')  # Всякое бывает. Предупреждаем.
        x = int(input('Введите другую строку:  '))  # Просим другие координаты для Х
        y = int(input('Введите друрой столбец:  '))
    sp[x - 1][y - 1] = 'X'  # Не надеимся на то, что игрок знает, что отсчёт идёт с [0] элемента


def nol():  # Всё про нолики, алгоритм тот же
    print("Ходят O ")
    x = int(input('Введите строку:  '))
    y = int(input('Введите столбец:  '))
    if x < 1 or x > 3 or y < 1 or y > 3 or sp[x - 1][y - 1] != '*':
        print('Данная ячейка занята или не существует.')
        x = int(input('Введите другую строку:  '))
        y = int(input('Введите друрой столбец:  '))
    sp[x - 1][y - 1] = '0'


def check():  # Проверки
    global vikt
    for n in sp:
        if n[0] == n[1] == n[2] != '*':  # Проверяем все строки
            print('Победил - ', n[0])
            vikt += 1  # Победил? Ну и хорошо, можно заканчивать
            break

    for o in range(0, 2):  # проверяем все столбцы
        if sp[0][o] == sp[1][o] == sp[2][o] != '*':
            print('Победил - ', sp[0][o])
            vikt += 1
            break

    if sp[0][0] == sp[1][1] == sp[2][2] != '*':  # Проверяем диагонали, а вдруг?
        print('Победил - ', sp[1][1])
        vikt += 1
    elif sp[0][2] == sp[1][1] == sp[2][0] != '*':
        print('Победил - ', sp[1][1])
        vikt += 1


k = 0
vikt=0
while k < 9:  # Ячееек - 9, значит ходов не больше
    pole()  # Выводим поле
    krest()  # Ходит крестик
    pole()  # Показываем, что изменилось
    check()  # Проверяем, не победил ли он
    k += 1  # считаем ход
    if k == 9 and vikt == 0:  # Сделан последний ход и победителя нет? Увы.
        print('Ходов нет. Ничья.')
        break
    elif vikt==1:   # Это нужно здесь, как собачке 5 лапка, но что-то без нее не работало...
        break
    print('\n' * 15)
    pole()  # Ситуация на поле
    nol()  # Ходит нолик
    pole()  # Показываем
    check()  # Проверяем, а вдруг он молодец
    k += 1  # Считаем ход
    if k == 9 and vikt == 0:  # Сделан последний ход и победителя нет? Увы.
        print('Ходов нет. Ничья.')
        break
    elif vikt==1:
        break
    print('\n' * 15)
